<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CloudFoundry.UAA.Client</name>
    </assembly>
    <members>
        <member name="M:CloudFoundry.UAA.Authentication.IAuthentication.Authenticate(CloudFoundry.UAA.CloudCredentials)">
            <summary>
            Authenticates the specified credentials.
            </summary>
            <param name="credentials">The credentials.</param>
            <returns>A refresh Token</returns>
        </member>
        <member name="M:CloudFoundry.UAA.Authentication.IAuthentication.Authenticate(System.String)">
            <summary>
            Authenticates the specified refresh token.
            </summary>
            <param name="refreshToken">The refresh token.</param>
            <returns>A refresh Token</returns>
        </member>
        <member name="M:CloudFoundry.UAA.Authentication.IAuthentication.GetToken">
            <summary>
            Gets the access token.
            </summary>
            <returns>The access token</returns>
        </member>
        <member name="P:CloudFoundry.UAA.Authentication.IAuthentication.OAuthUri">
            <summary>
            Gets or sets the oauth URL.
            </summary>
            <value>
            The oauth URL.
            </value>
        </member>
        <member name="T:CloudFoundry.UAA.Authentication.Token">
            <summary>
            Class that represents a token items from Oauth v2.
            </summary>
        </member>
        <member name="M:CloudFoundry.UAA.Authentication.Token.GetTokenInfo(System.String)">
            <summary>
            Decodes a token received from UAA.
            Implementation based on https://github.com/cloudfoundry/cli/blob/master/cf/configuration/core_config/access_token.go
            </summary>
            <returns>A JSON object that contains the decoded information.</returns>
        </member>
        <member name="M:CloudFoundry.UAA.Authentication.Token.RestorePadding(System.String)">
            <summary>
            Normalizes padding for a Base64 encoded string
            Implementation based on https://github.com/cloudfoundry/cli/blob/master/cf/configuration/core_config/access_token.go
            </summary>
            <returns>A Base64 encoded string.</returns>
        </member>
        <member name="P:CloudFoundry.UAA.Authentication.Token.UserName">
            <summary>
            Gets the username of the user associated with the token.
            </summary>
            <value>
            A username.
            </value>
        </member>
        <member name="P:CloudFoundry.UAA.Authentication.Token.Email">
            <summary>
            Gets the email of the user associatedwith the token.
            </summary>
            <value>
            An e-mail address.
            </value>
        </member>
        <member name="P:CloudFoundry.UAA.Authentication.Token.UserGuid">
            <summary>
            Gets the unique ID of the user associated with the token.
            </summary>
            <value>
            The user's ID.
            </value>
        </member>
        <member name="P:CloudFoundry.UAA.Authentication.Token.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:CloudFoundry.UAA.Authentication.Token.RefreshToken">
            <summary>
            Gets the refresh token.
            </summary>
            <value>
            The refresh token.
            </value>
        </member>
        <member name="P:CloudFoundry.UAA.Authentication.Token.Expires">
            <summary>
            Gets the expiration time in secounds.
            </summary>
            <value>
            The expires in.
            </value>
        </member>
        <member name="P:CloudFoundry.UAA.Authentication.Token.IsExpired">
            <summary>
            Gets a value indicating whether this token is expired.
            </summary>
            <value>
            <c>true</c> if this token is expired; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CloudFoundry.UAA.CloudCredentials">
            <summary>
            Credentials of the target cloud
            </summary>
        </member>
        <member name="P:CloudFoundry.UAA.CloudCredentials.User">
            <summary>
            Gets or sets the UserName
            </summary>
        </member>
        <member name="P:CloudFoundry.UAA.CloudCredentials.Password">
            <summary>
            Gets or sets the Password
            </summary>
        </member>
        <member name="T:CloudFoundry.UAA.AuthenticationContext">
            <summary>
            Class that represents the current authentication context.
            </summary>
        </member>
        <member name="P:CloudFoundry.UAA.AuthenticationContext.Token">
            <summary>
            Gets the token.
            </summary>
            <value>
            The token.
            </value>
        </member>
        <member name="P:CloudFoundry.UAA.AuthenticationContext.Uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>
            The URI.
            </value>
        </member>
        <member name="P:CloudFoundry.UAA.AuthenticationContext.IsLoggedIn">
            <summary>
            Gets a value indicating whether this instance is logged in.
            </summary>
            <value>
            <c>true</c> if this instance is logged in; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CloudFoundry.UAA.Exceptions.AuthenticationException">
            <summary>
            Exception class raised when something goes wrong in the Authentication process.
            </summary>
        </member>
        <member name="M:CloudFoundry.UAA.Exceptions.AuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CloudFoundry.UAA.Exceptions.AuthenticationException"/> class.
            </summary>
        </member>
        <member name="M:CloudFoundry.UAA.Exceptions.AuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudFoundry.UAA.Exceptions.AuthenticationException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CloudFoundry.UAA.Exceptions.AuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudFoundry.UAA.Exceptions.AuthenticationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:CloudFoundry.UAA.IUAA">
            <summary>
            Interface for classes using the UAA Client
            </summary>
        </member>
        <member name="M:CloudFoundry.UAA.IUAA.GenerateAuthorizationToken">
            <summary>
            Gets the authorization token. If the client is not authorized, an empty string is returned. If the token is expired, it generates a new one.
            </summary>
            <value>
            The authorization token.
            </value>
        </member>
        <member name="M:CloudFoundry.UAA.IUAA.Login(System.String)">
            <summary>
            Login using the specified raw token.
            </summary>
            <param name="refreshToken">A raw token.</param>
            <returns>Token Object</returns>
        </member>
        <member name="M:CloudFoundry.UAA.IUAA.Login(CloudFoundry.UAA.CloudCredentials)">
            <summary>
            Login using the specified credentials.
            </summary>
            <param name="credentials">The credentials.</param>
            <returns>Refresh Token</returns>
        </member>
        <member name="P:CloudFoundry.UAA.IUAA.AuthorizationToken">
            <summary>
            Gets the authorization token. It returns empty string if the client is not authorized. Also this method does not verify if the current token is expired.
            </summary>
            <value>
            The authorization token.
            </value>
        </member>
        <member name="P:CloudFoundry.UAA.IUAA.AuthorizationEndpoint">
            <summary>
            Authorization Endpoint
            </summary>
        </member>
        <member name="P:CloudFoundry.UAA.IUAA.UAAClient">
            <summary>
            UAA Client
            </summary>
        </member>
        <member name="T:CloudFoundry.UAA.UAAClient">
            <summary>
            This is the UAA client. To use it, you need a UAA endpoint.
            </summary>
        </member>
        <member name="M:CloudFoundry.UAA.UAAClient.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudFoundry.UAA.UAAClient"/> class.
            </summary>
            <param name="authenticationUri">The authentication URI.</param>
        </member>
        <member name="M:CloudFoundry.UAA.UAAClient.#ctor(System.Uri,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudFoundry.UAA.UAAClient"/> class.
            </summary>
            <param name="authenticationUri">The authentication URI.</param>
            <param name="httpProxy">The HTTP proxy.</param>
        </member>
        <member name="M:CloudFoundry.UAA.UAAClient.#ctor(System.Uri,System.Uri,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CloudFoundry.UAA.UAAClient"/> class.
            </summary>
            <param name="authenticationUri">The authentication URI.</param>
            <param name="httpProxy">The HTTP proxy.</param>
            <param name="skipCertificateValidation">if set to <c>true</c> it will skip TLS certificate validation for HTTP requests.</param>
        </member>
        <member name="M:CloudFoundry.UAA.UAAClient.Login(CloudFoundry.UAA.CloudCredentials)">
            <summary>
            Logins the specified credentials.
            </summary>
            <param name="credentials">The credentials.</param>
            <returns>A refresh token</returns>
        </member>
        <member name="M:CloudFoundry.UAA.UAAClient.Login(System.String)">
            <summary>
            Logins the specified refresh token.
            </summary>
            <param name="refreshToken">The refresh token.</param>
            <returns>A refresh Token</returns>
        </member>
        <member name="M:CloudFoundry.UAA.UAAClient.GenerateContext">
            <summary>
            Generates the Authentication Context.
            </summary>
            <returns>A valid Authentication Context.</returns>
            <exception cref="T:CloudFoundry.UAA.Exceptions.AuthenticationException">Target not logged in, please login first</exception>
        </member>
        <member name="P:CloudFoundry.UAA.UAAClient.Context">
            <summary>
            Gets the Authentication Context.
            </summary>
            <value>
            The Authentication Context.
            </value>
        </member>
    </members>
</doc>
